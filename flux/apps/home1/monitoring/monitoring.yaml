apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# VictoriaMetrics Single Node
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: victoriametrics
  namespace: monitoring
spec:
  interval: 24h
  url: https://victoriametrics.github.io/helm-charts/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoriametrics
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: victoria-metrics-single
      version: "0.9.25"
      sourceRef:
        kind: HelmRepository
        name: victoriametrics
        namespace: monitoring
  values:
    server:
      persistentVolume:
        enabled: true
        size: 20Gi
        storageClass: "local-path"
      retentionPeriod: 30d
      resources:
        requests:
          memory: "512Mi"
          cpu: "200m"
        limits:
          memory: "2Gi"
          cpu: "1000m"
    service:
      type: ClusterIP
      port: 8428
---
# Grafana
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 24h
  url: https://grafana.github.io/helm-charts
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin
  namespace: monitoring
type: Opaque
stringData:
  admin-user: admin
  admin-password: homelab-grafana-2025
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: "8.8.2"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: monitoring
  values:
    admin:
      existingSecret: grafana-admin
      userKey: admin-user
      passwordKey: admin-password
    persistence:
      enabled: true
      size: 5Gi
      storageClassName: "local-path"
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: VictoriaMetrics
            type: prometheus
            url: http://victoriametrics-victoria-metrics-single-server:8428
            access: proxy
            isDefault: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        homelab-overview:
          gnetId: 1860  # Node Exporter Full dashboard
          revision: 37
          datasource: VictoriaMetrics
    service:
      type: ClusterIP
      port: 80
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
---
# Blackbox Exporter for service monitoring
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 24h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blackbox-config
  namespace: monitoring
data:
  blackbox.yml: |
    modules:
      http_2xx:
        prober: http
        http:
          preferred_ip_protocol: "ip4"
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          valid_status_codes: [200]
          method: GET
          fail_if_ssl: false
          fail_if_not_ssl: false
      http_post_2xx:
        prober: http
        http:
          method: POST
          preferred_ip_protocol: "ip4"
          valid_status_codes: [200]
      tcp_connect:
        prober: tcp
      icmp:
        prober: icmp
        icmp:
          preferred_ip_protocol: "ip4"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blackbox-exporter
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: prometheus-blackbox-exporter
      version: "8.17.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
  values:
    config:
      modules:
        http_2xx:
          prober: http
          http:
            preferred_ip_protocol: "ip4"
            valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
            valid_status_codes: [200]
            method: GET
        icmp:
          prober: icmp
          icmp:
            preferred_ip_protocol: "ip4"
    service:
      type: ClusterIP
      port: 9115
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
---
# Node Exporter for system metrics
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: node-exporter
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: prometheus-node-exporter
      version: "4.39.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
  values:
    hostNetwork: true
    hostPID: true
    hostRootFSMount:
      enabled: true
    service:
      type: ClusterIP
      port: 9100
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
---
# Speedtest Tracker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: speedtest-tracker
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: speedtest-tracker
  template:
    metadata:
      labels:
        app: speedtest-tracker
    spec:
      containers:
      - name: speedtest-tracker
        image: lscr.io/linuxserver/speedtest-tracker:latest
        ports:
        - containerPort: 80
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: APP_KEY
          value: base64:$(openssl rand -base64 32)
        - name: DB_CONNECTION
          value: sqlite
        - name: SPEEDTEST_SCHEDULE
          value: "0 */1 * * *"  # Every hour
        - name: SPEEDTEST_SERVERS
          value: ""  # Auto-select best server
        volumeMounts:
        - name: config
          mountPath: /config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: speedtest-tracker-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: speedtest-tracker-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: "local-path"
---
apiVersion: v1
kind: Service
metadata:
  name: speedtest-tracker
  namespace: monitoring
spec:
  selector:
    app: speedtest-tracker
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# HTTPRoutes for monitoring services
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: grafana
  namespace: monitoring
spec:
  parentRefs:
  - name: lab-gateway
    namespace: nginx-gateway
  hostnames:
  - "grafana.lab.lkwt.dev"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: grafana
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: speedtest-tracker
  namespace: monitoring
spec:
  parentRefs:
  - name: lab-gateway
    namespace: nginx-gateway
  hostnames:
  - "speedtest.lab.lkwt.dev"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: speedtest-tracker
      port: 80